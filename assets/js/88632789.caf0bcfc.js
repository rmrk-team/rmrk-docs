(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{101:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return b}));var n=a(3),i=a(7),o=(a(0),a(127)),l=["components"],r={title:"Catalogs and Equippable NFTs"},s={unversionedId:"lego25-equippable",id:"lego25-equippable",isDocsHomePage:!1,title:"Catalogs and Equippable NFTs",description:"We introduce the concept of a Catalog (previously known as Base).",source:"@site/docs/lego25-equippable.md",slug:"/lego25-equippable",permalink:"/lego25-equippable",editUrl:"https://github.com/rmrk-team/rmrk-docs/edit/master/docs/lego25-equippable.md",version:"current",sidebar:"docs",previous:{title:"Multi-asset (Multi-resource) NFTs",permalink:"/lego2-multi-resource"},next:{title:"On-chain emotes",permalink:"/lego3-emote"}},c=[{value:"How a Catalog Works: Chunkies Example",id:"how-a-catalog-works-chunkies-example",children:[]},{value:"Example: Leveling Characters",id:"example-leveling-characters",children:[]},{value:"Example: Music",id:"example-music",children:[]},{value:"Example: Games",id:"example-games",children:[]},{value:"Theming",id:"theming",children:[]},{value:"Other Examples",id:"other-examples",children:[]},{value:"Implementations",id:"implementations",children:[]}],p={toc:c};function b(e){var t=e.components,r=Object(i.a)(e,l);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("img",{src:a(190).default})),Object(o.b)("p",null,"We introduce the concept of a Catalog (previously known as Base)."),Object(o.b)("p",null,"A Catalog can be considered a ",Object(o.b)("em",{parentName:"p"},"catalog of parts")," from which an NFT can be composed. Parts can be\neither of the ",Object(o.b)("inlineCode",{parentName:"p"},"slot")," type or ",Object(o.b)("inlineCode",{parentName:"p"},"fixed")," type. Slots are intended for equippables."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Note: a catalog is referenced in an NFT as a separate ",Object(o.b)("a",{parentName:"p",href:"/lego2-multi-resource"},"asset")," by specifying\nthe catalog ID and cherry picking the list of parts from the catalog for that NFT instance. The\napproach differs slightly per implementation, so the examples below will mostly use pseudo-code to\ncommunicate the concept.")),Object(o.b)("p",null,"Catalogs can be of different media types."),Object(o.b)("p",null,"The catalog's type indicates what the final output of an NFT will be when this asset is rendered.\nSupported types are PNG, SVG, audio, video, mixed, although only PNG and SVG have been implemented\nin RMRK front-ends so far."),Object(o.b)("p",null,"It is easiest to understand catalogs and equippables through a visual example like a PNG or SVG\ncatalog, so we will focus on this in the explanations below. Additional examples of different types are\nat the end of this page."),Object(o.b)("p",null,"The most important concept to understand with regard to equippables is that the final output is not\nstatic. Equipping, e.g., a hat onto a rhino does not generate a new static image in place of an old\none. Instead, the hat is dynamically rendered ",Object(o.b)("em",{parentName:"p"},"inside")," the image of the rhino, and the image of the\nrhino has to be prepared for this functionality in advance."),Object(o.b)("p",null,"This is what the Catalog system allows: minting collections with equippability in mind, regardless\nof type - audio files can be prepared with slots for audio stems, movie catalogs can be prepared with\nfilter slots, but video files can also have a slot for subtitles, or even an alternative audio\ntrack, and more."),Object(o.b)("h2",{id:"how-a-catalog-works-chunkies-example"},"How a Catalog Works: Chunkies Example"),Object(o.b)("p",null,'A catalog is a list of "components" a combination of which can be used to form a single NFT.'),Object(o.b)("p",null,"Let's take for example an avatar project called Chunkies: chubby characters that can hold items,\nwear headwear, and have have different backgrounds along with looking unique between each other.\nHere are some combinations."),Object(o.b)("p",null,Object(o.b)("img",{alt:"Chunky examples",src:a(191).default})),Object(o.b)("p",null,"Each Chunky is a combination of different parts from the Chunky catalog."),Object(o.b)("p",null,Object(o.b)("img",{alt:"Chunky catalog",src:a(192).default})),Object(o.b)("p",null,"Some of those parts are slots into which other compatible images can be placed - these are the\nequippables. The slots are not visible when inspected individually - on the final composition they\nwould come, for example, behind the Chunky (background), or between the fingers and the palm. The\nred diagonal lines below show where an item would appear."),Object(o.b)("p",null,Object(o.b)("img",{alt:"Chunky slots",src:a(193).default})),Object(o.b)("p",null,"The process of adding an equippable asset to an NFT:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"create a catalog entity (one-time process for given collection)"),Object(o.b)("li",{parentName:"ol"},"add a new asset to each target NFT, cherry picking the catalog's parts")),Object(o.b)("p",null,"This new asset defines a catalog and some picked parts, like so:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'    "assets": [\n        {\n            "catalog": "base-8788686-CHUNKBASE",\n            "id": "Whqja-r1",\n            "parts": [\n                "var1_body",\n                "var1_eyes",\n                "1fa78_handleft",\n                "1fa78_handright",\n                "var1_head",\n                "background",\n                "foreground",\n                "headwear",\n                "objectleft",\n                "objectright",\n                "necklace",\n            ],\n            "pending": false,\n            "themeId": "bandicoot",\n            "thumb": "ipfs://ipfs/QmR3rK1P4n24PPqvfjGYNXWixPJpyBKTV6rYzAS2TYHLpT"\n        }\n    ],\n')),Object(o.b)("p",null,"You can see in the mock code above that we are dealing with the ",Object(o.b)("inlineCode",{parentName:"p"},"assets")," array of a certain NFT"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Note that asset used to be called resource, and catalog was called base, so the actual code you\nfind in the Kusama implementation will reflect this - these examples will focus on the updated\nnomenclature.")),Object(o.b)("p",null,"This NFT in particular has only a single asset - the equippable catalog itself. The ",Object(o.b)("inlineCode",{parentName:"p"},"catalog")," value\nrefers to the ID of the Catalog meta-entity, the ",Object(o.b)("inlineCode",{parentName:"p"},"id")," field is used for indexing and to be able to\ntarget a specific asset when wanting to replace, accept, or remove it, while ",Object(o.b)("inlineCode",{parentName:"p"},"pending")," tells us\nwhether the NFT owner has accepted this asset (false means yes, it has been accepted)."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u2757\ufe0f More info on acceptance mechanics in ",Object(o.b)("a",{parentName:"p",href:"/lego2-multi-resource"},"multi asset NFTs"),".")),Object(o.b)("p",null,"The most important part is ",Object(o.b)("inlineCode",{parentName:"p"},"parts")," - this is the array in which we specify which parts from the\nassigned ",Object(o.b)("inlineCode",{parentName:"p"},"catalog")," make up this NFT. The parts themselves are defined in the ",Object(o.b)("inlineCode",{parentName:"p"},"catalog")," itself, like\nso:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"  ...,\n  {\n    type: 'slot',\n    id: 'headwear',\n    equippable: [\n      '9cba890074545f2e7c-KANPRTN',\n      'e0b9bdcc456a36497a-EVNTS',\n    ],\n    z: 13,\n  },\n  {\n    type: 'fixed',\n    id: 'var1_head',\n    src: 'ipfs://ipfs/QmZy8eRLhToqPk5154SJkTJfPD8AMnPAjBi6w1S61yNPrR/var1/var1_head.svg',\n    z: 9,\n  },\n  ...\n")),Object(o.b)("p",null,"The first slot is ",Object(o.b)("inlineCode",{parentName:"p"},"headwear")," and you can see it is a ",Object(o.b)("inlineCode",{parentName:"p"},"slot")," type. The ",Object(o.b)("inlineCode",{parentName:"p"},"equippable")," array lists the\ncollections that are allowed as equippables. The issuer of the catalog can modify this value at any\ntime, adding and removing collections at will."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"fixed")," part just points to a visual which should be rendered. It is immutable."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"z"),' value in both indicates on which layer the visual appears on the SVG catalog, height-wise. The\nhigher the number, the "closer to camera" it is. This is especially important for slot, since - per\nthe image above - the ',Object(o.b)("inlineCode",{parentName:"p"},"z")," value of the handheld slot needs to be between the fingers and the palm,\nand the ",Object(o.b)("inlineCode",{parentName:"p"},"z")," value of the background needs to be the lowest of all to be rendered at the bottom."),Object(o.b)("p",null,"Thus, an asset which is a catalog will cherry pick parts from that catalog to compose a final NFT,\nuntil we get our colorful chunkies."),Object(o.b)("p",null,"Our flagship project, Kanaria, uses this same approach. If you wish, you can explore its full\ncatalog ",Object(o.b)("a",{parentName:"p",href:"https://gist.github.com/Yuripetusko/dccd18ef3efe6058d73c29dbe0ef5b6f"},"here"),"."),Object(o.b)("p",null,"A full graphical breakdown of the Kanaria project and how its catalog works is also available\n",Object(o.b)("a",{parentName:"p",href:"https://url.rmrk.app/demobird"},"here"),"."),Object(o.b)("h2",{id:"example-leveling-characters"},"Example: Leveling Characters"),Object(o.b)("p",null,Object(o.b)("img",{src:a(194).default})),Object(o.b)("p",null,"A fully decentralized and on-chain way of representing level-requirements for characters is possible\nby using equippables and multi assets."),Object(o.b)("p",null,"If we take for example a Chunky that is level 1, this NFT can have an asset that points to the\nChunky catalog, but from it picks only the parts that have the ",Object(o.b)("inlineCode",{parentName:"p"},"equippable")," value set to level-1\ncollections of items, limiting the NFT to equipping only level 1 gear."),Object(o.b)("p",null,'The level itself can be an equippable NFT inside the avatar - a "level brain" which needs to collect\nexperience in the form of successful quest trips. Based on the achievements collected, the Chunky\ncan get a different type of level-up.'),Object(o.b)("p",null,"For example, for level 2, a Chunky needs to have two successful quests. If those quests are done in\na fire world, then the next asset could have a fire ",Object(o.b)("a",{parentName:"p",href:"#theming"},"theme"),'. If they are done in a water\nworld, a water theme could apply. The NFT owner would choose which "quest successes" to equip into\nthe "Level NFT" which is inside the avatar, and use them to create full "experience sets" this way.'),Object(o.b)("p",null,"Once this Chunky has amassed enough experience to go to level 2, a new asset can be added to it,\ntargeting the previous one by ID to replace it when accepted by the NFT owner. This asset will point\nto the same catalog, but will now pick slot parts that are configured to accept level 1 and level 2\ncollections of items, thereby making it possible to now equip higher level gear."),Object(o.b)("p",null,'Another example is giving "brain NFTs" with a certain number of slots to a certain level character.\nFor example, a character of level 2 can have only 2 skills ',Object(o.b)("em",{parentName:"p"},"equipped")," into its brain, but if the\navatar is aware of more than 2 skills, the player must choose which ones to load after a rest\nperiod, like with wizard spells in Dungeons and Dragons."),Object(o.b)("p",null,"This is explored in depth in the ",Object(o.b)("a",{parentName:"p",href:"/usecases/charprog"},"Character Progression")," use case."),Object(o.b)("h2",{id:"example-music"},"Example: Music"),Object(o.b)("p",null,Object(o.b)("img",{src:a(195).default})),Object(o.b)("p",null,"A song NFT could have as an asset a music catalog with a fixed beat, but slots for vocals, drums,\nsynth, effect, even a slot for a visualization - perhaps even for some runnable\n",Object(o.b)("a",{parentName:"p",href:"https://p5js.org/"},"p5.js")," code."),Object(o.b)("p",null,"Not only is this really cool in the context of paying royalties to anyone who contributed to a\nsong's creation with their own stem, but we can take it further: the song itself, or maybe just a\nsingle stem can be made equippable on the catalog asset of a metaverse land."),Object(o.b)("p",null,"That way, whoever enters this land gets it played as a soundtrack of the area, background music. The\nmusic is thus compatible not just with its own project, or the issuer's associated projects, but\nwith any project that can be launched on RMRK standards."),Object(o.b)("h2",{id:"example-games"},"Example: Games"),Object(o.b)("p",null,"The game use case is so obvious, we turned it into a proof of concept with\n",Object(o.b)("a",{parentName:"p",href:"https://skybreach.app"},"Skybreach"),"."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A house can be equipped on a plot of land."),Object(o.b)("li",{parentName:"ul"},"A billboard can be equipped and then additionally community governed to earn yield to\nshareholders."),Object(o.b)("li",{parentName:"ul"},"An avatar can equip a jacket. That jacket can have pockets which equip stuff, and slots for\npatches."),Object(o.b)("li",{parentName:"ul"},"An NPC can be an NFT which has a personality-NFT installed, or a skill-NFT for sale.")),Object(o.b)("h2",{id:"theming"},"Theming"),Object(o.b)("p",null,"The RMRK spec supports theme interpolation. This allows for yet another layer of uniqueness to be\napplied to your NFTs without having to specifically design and develop them."),Object(o.b)("p",null,Object(o.b)("img",{src:a(196).default})),Object(o.b)("p",null,"A catalog will contain themes keyed by name, like so:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"...\nthemes: {\n  sunkissed: {\n    theme_color_1: '#ffd592',\n    theme_color_2: '#edffd9',\n    theme_color_3: '#eb5a8b',\n    theme_color_4: '#ee9154',\n  },\n  retrosteel: {\n    theme_color_1: '#98baff',\n    theme_color_2: '#8af3fc',\n    theme_color_3: '#5562e9',\n    theme_color_4: '#d16dd1',\n  },\n  ...\n")),Object(o.b)("p",null,"These are variables that can contain any value - in this example they are colors. Then, an SVG\nitself can contain a placeholder data attribute that this variable is inserted into, but which has a\ndefault value of its own:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-html"},'<svg height="100" width="100">\n  <circle cx="50" cy="50" r="40" stroke="black" stroke-width="3" data-theme_color_3="red" />\n</svg>\n')),Object(o.b)("p",null,"Finally, the theme is selected as part of the asset being added to the NFT:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'    "assets": [\n        {\n            "catalog": "base-8788686-CHUNKBASE",\n            "id": "Whqja-r1",\n            "parts": [...],\n            "pending": false,\n            "themeId": "sunkissed", // <--- THIS HERE\n            "thumb": "ipfs://ipfs/QmR3rK1P4n24PPqvfjGYNXWixPJpyBKTV6rYzAS2TYHLpT"\n        }\n    ],\n')),Object(o.b)("p",null,"This does take a little bit of extra work in making the SVGs and preparing them for use, but it\nresults in orders of magnitude more of possible combinations on your NFTs."),Object(o.b)("p",null,"A more comprehensive example is available\n",Object(o.b)("a",{parentName:"p",href:"https://github.com/rmrk-team/rmrk-spec/blob/master/standards/rmrk2.0.0/interactions/themeadd.md"},"here"),",\nbut applies only to the Kusama implementation which is now deprecated."),Object(o.b)("h2",{id:"other-examples"},"Other Examples"),Object(o.b)("p",null,"A creative application of composability and equippability is the\n",Object(o.b)("a",{parentName:"p",href:"https://twitter.com/bitfalls/status/1508793028454014978?s=20&t=v1MmdhrE3WrtfjBkj3kcxw"},"Mushroomtopia composable PFP project"),"."),Object(o.b)("p",null,"Some interesting early experiments with game-related equippables can be seen in the following video:"),Object(o.b)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/_RW7XymkI_M",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),Object(o.b)("p",null,"Another interesting example is using equippable NFTs to represent on-chain participation, like in\nthe example of\n",Object(o.b)("a",{parentName:"p",href:"https://app.subsocial.network/6214/referendum-voting-rewards-the-past-the-present-the-future-32141"},"Kusama Governance Rewards"),".\nFor a breakdown, please see the video below."),Object(o.b)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/lpT7hubqzFQ",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),Object(o.b)("h2",{id:"implementations"},"Implementations"),Object(o.b)("p",null,"The implementations below lead directly to code. For examples of how to utilize them to mint your\nown NFTs, please refer to the sidebar section for each implementation subtype."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/rmrk-team/rmrk-spec/blob/master/standards/rmrk2.0.0/interactions/equip.md"},"Kusama")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-6059"},"EVM: EIP 6059")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/rmrk-team/rmrk-substrate/tree/main/pallets/rmrk-equip"},"Pallets"))))}b.isMDXComponent=!0},127:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return d}));var n=a(0),i=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=i.a.createContext({}),p=function(e){var t=i.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},b=function(e){var t=p(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=p(a),u=n,d=b["".concat(l,".").concat(u)]||b[u]||h[u]||o;return a?i.a.createElement(d,r(r({ref:t},c),{},{components:a})):i.a.createElement(d,r({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:n,l[1]=r;for(var c=2;c<o;c++)l[c]=a[c];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},190:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/eq_01-83573d60f0114f9bb92854e8d54dfd12.png"},191:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/P5FUhk8-4f38f66302c6bc31867446a5694ea49b.jpeg"},192:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/chunky1-2e58c303682485e8fd466b0b301b7929.png"},193:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/chunky2-7e0e0fa5ee6530770e979e754a498749.png"},194:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/eq_02-5afcf8349adeb6152d3cf3adfb484436.png"},195:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/eq_03-43a2ba32ac1266bea2c3ffcb5074321d.png"},196:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/eq_04-e4a43ed8f0b6cf7efd8ff4d49232fbdd.png"}}]);